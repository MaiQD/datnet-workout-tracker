// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using dotFitness.Modules.Users.Infrastructure.Data;

#nullable disable

namespace dotFitness.Modules.Users.Infrastructure.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    partial class UsersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("users")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("dotFitness.Modules.Users.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AvailableEquipmentIds")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("AvailableEquipmentIds");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DisplayName");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(320)")
                        .HasColumnName("Email");

                    b.Property<string>("FocusMuscleGroupIds")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("FocusMuscleGroupIds");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Gender");

                    b.Property<string>("GoogleId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("GoogleId");

                    b.Property<bool>("IsOnboarded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsOnboarded");

                    b.Property<string>("LoginMethod")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LoginMethod");

                    b.Property<DateTime?>("OnboardingCompletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("OnboardingCompletedAt");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("varchar(2048)")
                        .HasColumnName("ProfilePicture");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("Roles");

                    b.Property<string>("UnitPreference")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UnitPreference");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedAt")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_Users_CreatedAt");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Users_Email");

                    b.HasIndex("GoogleId")
                        .IsUnique()
                        .HasDatabaseName("IX_Users_GoogleId")
                        .HasFilter("\"GoogleId\" IS NOT NULL");

                    b.HasIndex("IsOnboarded")
                        .HasDatabaseName("IX_Users_IsOnboarded");

                    b.HasIndex("LoginMethod")
                        .HasDatabaseName("IX_Users_LoginMethod");

                    b.ToTable("Users", "users");
                });

            modelBuilder.Entity("dotFitness.Modules.Users.Domain.Entities.UserMetric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("Bmi")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("Bmi");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("Date");

                    b.Property<double?>("Height")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("Height");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("Notes");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedAt")
                        .HasDefaultValueSql("NOW()");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("UserId");

                    b.Property<double?>("Weight")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("Weight");

                    b.HasKey("Id");

                    b.HasIndex("Bmi")
                        .HasDatabaseName("IX_UserMetrics_Bmi")
                        .HasFilter("\"Bmi\" IS NOT NULL");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_UserMetrics_CreatedAt");

                    b.HasIndex("Date")
                        .HasDatabaseName("IX_UserMetrics_Date");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_UserMetrics_UserId");

                    b.HasIndex("UserId", "Date")
                        .IsUnique()
                        .HasDatabaseName("IX_UserMetrics_UserId_Date");

                    b.ToTable("UserMetrics", "users");
                });

            modelBuilder.Entity("dotFitness.Modules.Users.Infrastructure.Data.Entities.OutboxMessageEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("boolean");

                    b.Property<string>("LastError")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RetryCount")
                        .HasColumnType("integer");

                    b.Property<string>("TraceId")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_OutboxMessages_CreatedAt");

                    b.HasIndex("EventId")
                        .IsUnique()
                        .HasDatabaseName("IX_OutboxMessages_EventId");

                    b.HasIndex("EventType")
                        .HasDatabaseName("IX_OutboxMessages_EventType");

                    b.HasIndex("IsProcessed")
                        .HasDatabaseName("IX_OutboxMessages_IsProcessed");

                    b.HasIndex("IsProcessed", "CreatedAt")
                        .HasDatabaseName("IX_OutboxMessages_IsProcessed_CreatedAt");

                    b.ToTable("OutboxMessages", "users");
                });
#pragma warning restore 612, 618
        }
    }
}
